{"version":3,"sources":["flower/index.module.scss","flower/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Flower","scale","style","containerStyle","useMemo","transform","className","styles","container","box","Array","fill","undefined","map","_","index","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,IAAM,oBAAoB,OAAS,uBAAuB,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,QAAU,wBAAwB,QAAU,0B,+JCOlQ,SAASC,EAAT,GAAqD,IAAD,IAAlCC,aAAkC,MAA1B,EAA0B,EAAvBC,EAAuB,EAAvBA,MACrBC,EAAiBC,mBACrB,8BAAC,eACIF,GADL,IAEEG,UAAU,WAAD,OAAaJ,EAAb,YAAsBA,EAAtB,YAA+BA,EAA/B,SAEX,CAACA,EAAOC,IAGV,OACE,qBAAKI,UAAWC,IAAOC,UAAWN,MAAOC,EAAzC,SACE,qBAAKG,UAAWC,IAAOE,IAAvB,SACGC,MAAM,GACJC,UAAKC,GACLC,KAAI,SAACC,EAAGC,GAAJ,OACH,qBAAiBC,GAAE,cAASD,GAA5B,SACE,gCACE,wBACA,wBACA,wBACA,4BALMA,UCZPE,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAACN,EAAD,OCQSkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c4ca935.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"flower_container__15zT9\",\"box\":\"flower_box__KgX8H\",\"rotate\":\"flower_rotate__16FVU\",\"extend\":\"flower_extend__36WuR\",\"flower1\":\"flower_flower1__3uBgt\",\"flower2\":\"flower_flower2__N-9cB\",\"flower3\":\"flower_flower3__3fAQq\",\"flower4\":\"flower_flower4__3r9hI\"};","import { CSSProperties, useMemo } from \"react\"\nimport styles from \"./index.module.scss\"\n\ninterface IFlowerProps {\n  scale?: number\n  style?: CSSProperties\n}\n\nfunction Flower({ scale = 1, style }: IFlowerProps) {\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      transform: `scale3d(${scale},${scale},${scale})`,\n    }),\n    [scale, style]\n  )\n\n  return (\n    <div className={styles.container} style={containerStyle}>\n      <div className={styles.box}>\n        {Array(6)\n          .fill(undefined)\n          .map((_, index) => (\n            <div key={index} id={`item${index}`}>\n              <div>\n                <div />\n                <div />\n                <div />\n                <div />\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport { Flower }\n","import \"./App.css\"\nimport { Flower } from \"./flower\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Flower />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}